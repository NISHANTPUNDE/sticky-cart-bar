{{ 'style.css' | asset_url | stylesheet_tag }}

{% schema %}
{
  "name": "Sticky Cart Bar",
  "target": "section"
}
{% endschema %}

<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
  integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
>
  <div class="rg-sticky-cart-bar pnotibarbtn" id="add-cart-id">
    <div class="rg-sticky-cart-bar-main-div" id="pnotibarbtn">
        <div class="rg-sticky-cart-bar-image-title-main-div">
            <div class="rg-sticky-cart-bar-product-image-div svimg">
              <img width="50px" height="50px" src="{{ product.featured_image.src | img_url: 'master' }}" class="earring-img">
            </div>
            <div class="rg-sticky-cart-bar-product-title-div svproprice" id="svproducttitle">
                <p class="svproprice" id="svproname">{{ product.title }}</p>
            </div>
        </div>

        <div class="rg-sticky-cart-bar-main-select-div">
            <div class="rg-sticky-cart-bar-quantity-div svquantity">
              <select class="form-control round sel1" id="quantity">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
              </select>
            </div>
            <div class="rg-sticky-cart-bar-color-div">
                <select id="metal-dropdown" class="metal-select" class="rg-sticky-cart-bar-select-arrow-design color">
                  {% assign selected_metals = '' %}
                  {% for variant in product.variants %}
                    {% assign metal = variant.title | split: ' / ' | first %}
                    {% unless selected_metals contains metal %}
                      {% if product.selected_variant.title == variant.title %}
                        <option value="{{ metal }}" selected>{{ metal }}</option>
                      {% else %}
                        <option value="{{ metal }}">{{ metal }}</option>
                      {% endif %}
                      {% assign selected_metals = selected_metals | append: metal | append: '|' %}
                    {% endunless %}
                  {% endfor %}
                </select>
            </div>
            <div class="rg-sticky-cart-bar-size-div">
                <select id="size-input"  class="select-arrow-design size">
                  {% assign selected_sizes = '' %}
                  {% for variant in product.variants %}
                    {% assign size = variant.title | split: ' / ' | last %}
                    {% unless selected_sizes contains size %}
                      {% if product.selected_variant.title == variant.title %}
                        <option value="{{ size }}" selected>{{ size }}</option>
                      {% else %}
                        <option value="{{ size }}">{{ size }}</option>
                      {% endif %}
                      {% assign selected_sizes = selected_sizes | append: size | append: '|' %}
                    {% endunless %}
                  {% endfor %}
                </select>
            </div>
        </div>
        <div class="rg-sticky-cart-bar-main-price-button-div">

            <div class="rg-sticky-cart-bar-price-div svproprice svproprice1" id="svprice" ></div>
            <div class="rg-sticky-cart-bar-button-div">
              <button class="rg-sticky-cart-bar-buy-now svcartbtn" onclick="cartChange()">Buy Now</button>
            </div>
        </div>

    </div>
</div>

{% comment %} <section class="add-cart-section" id="add-cart-id">
  <div id="pnotibarbtn" class="showpnotibar">
<<<<<<< HEAD
    <div class="product-card">
      
=======
    <div class="product-card" id="svcolor">
>>>>>>> 79bbf03cf3d93f60efaa7b5dbb4795aff2438a2b
      <div class="product-info mobhide">
        <img width="50px" height="50px" src="{{ product.featured_image.src | img_url: 'master' }}" class="earring-img svimg">
        <h3 id="svproducttitle">{{ product.title }}</h3>
      </div>

      <select class="form-control round sel1 svquantity" id="svquantity">
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
      </select>
      <div class="metal">
       
        <select id="metal-dropdown" class="metal-select" style="width:90px; margin:6px">
          {% assign selected_metals = '' %}
          {% for variant in product.variants %}
            {% assign metal = variant.title | split: ' / ' | first %}
            {% unless selected_metals contains metal %}
              {% if product.selected_variant.title == variant.title %}
                <option value="{{ metal }}" selected>{{ metal }}</option>
              {% else %}
                <option value="{{ metal }}">{{ metal }}</option>
              {% endif %}
              {% assign selected_metals = selected_metals | append: metal | append: '|' %}
            {% endunless %}
          {% endfor %}
        </select>
      </div>
    
      <select id="size-input" class="form-control round sel3">
        {% assign selected_sizes = '' %}
        {% for variant in product.variants %}
          {% assign size = variant.title | split: ' / ' | last %}
          {% unless selected_sizes contains size %}
            {% if product.selected_variant.title == variant.title %}
              <option value="{{ size }}" selected>{{ size }}</option>
            {% else %}
              <option value="{{ size }}">{{ size }}</option>
            {% endif %}
            {% assign selected_sizes = selected_sizes | append: size | append: '|' %}
          {% endunless %}
        {% endfor %}
      </select>

      <div class="product-price svproprice" id="svprice"></div>

<<<<<<< HEAD
      <button class="add-to-cart-btn" onclick="cartChange()">Buy Now</button>
      
=======
      <button  class="add-to-cart-btn svcartbtn" onclick="cartChange()">Buy Now</button>
>>>>>>> 79bbf03cf3d93f60efaa7b5dbb4795aff2438a2b
      <div class="clearfix"></div>
    </div>
  </div>
</section> {% endcomment %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var productid = '{{ product.id }}'; 
    console.log("product", productid);
    if (!productid || productid === '') {
        document.getElementById('add-cart-id').style.display = 'none';
    }
});


  function selected(selectedNumber=1){
  var price = parseFloat('{{ product.price | money_without_currency  }}');
    var totalPrice = price * selectedNumber;
    console.log("price",totalPrice);
    var currency = "{{ product.price | money_with_currency | split: ' ' | first }}";
    console.log("curr",currency[0])

    document.getElementById('svprice').textContent = currency[0]+' '+totalPrice;
    
      }
      selected();
      document.getElementById('svquantity').addEventListener('change', function(){
        selected(this.value);
        console.log(selected(this.value))
      });



    let key;
     const obj = [
        {% for variant in product.variants %}
            { "{{ variant.id }}": "{{ variant.title }}" },
        {% endfor %}
    ];
    console.log(obj);
    const a=[{% for variant in product.variants %}
            "{{ variant.title }}" ,
        {% endfor %}]
    console.log("a",a)


document.addEventListener('click', function() {
    const metalval = document.getElementById('metal-dropdown').value;
    const sizeval = document.getElementById('size-input').value;  
    let result;
    if (a[0].includes('/')) {
  result = metalval + " / " + sizeval;
  console.log("metal", metalval, "size", sizeval);
  console.log("concat:", result);
} else if (!a[0].includes(' / ')) {
   result = metalval;
   const size = document.getElementById('size-input')
   size.style.display = 'none';
  console.log("met", metalval);
  console.log("concat:", result);
}



      console.log("m", metalval, "s", sizeval);
      console.log("concat:", result);
      console.log("variant",{{ variant.title | split: ' / ' | first }})

      const match = obj.find(item => Object.values(item)[0] === result);
      if (match) {
          key = Object.keys(match)[0];
          console.log("Key:", key);
      } else {
          console.log("No matching key found.");
      }
  });

  document.addEventListener('DOMContentLoaded', function() {
    const metalval = document.getElementById('metal-dropdown').value;
    const sizeval = document.getElementById('size-input').value;  
    let result;
    if (a[0].includes('/')) {
  console.log("fg")
} else if (!a[0].includes(' / ')) {
   const size = document.getElementById('size-input')
   size.style.display = 'none';
}
})


  async function cartChange() {
  const productId = key;
  console.log("q",productId);
   var quantityInput = document.getElementById("svquantity");
  var quantityValue = quantityInput.value;

    console.log("a",quantityValue);
  
   const data = {
    items: [
        {
          id: productId,
          quantity: quantityValue
        }
      ]
    };

    const response = await fetch("/cart/add.js", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      },
      body: JSON.stringify(data)
    });

    const myJson = await response.json();
    console.log(myJson);
    if(response.ok)
    {
      console.log(data)
      window.location.href = "/cart";
    }
    else
    {
      alert("Product not added to cart");
    }
  }
</script>


<script>
  document.addEventListener('DOMContentLoaded', async() => {
    const productid={{ product.id }}
    try
    {
      const productres= await fetch(`https://www.prodnotifyapi.skyvisionshopify.in/productnotifypurchasebar/${productid}`);
      if(productres.ok){
        const productData = await productres.json();
        const productsuccess = productData.success
        let product;
        if(productsuccess)
        {
          product = productData.data[0]?.Status
        }
        console.log("pro1",product)
        console.log("success",productsuccess)
        const bar= document.getElementById('pnotibarbtn')

        bar.style.display = product == 1 && productsuccess == 1 ? "grid" : "none";
      }
    }
    catch(error){
      console.log("errror nhhhhj")
      console.log(error)
    }
    const shopid = {{ shop.id }};
    try {
        const response = await fetch(`https://www.prodnotifyapi.skyvisionshopify.in/productnotifypurchasebar/color/${shopid}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (!response.ok) {
            throw new Error('Network response was not ok in color');
        }

        const data = await response.json();
        const success = data.success;
        console.log(success)
        console.log(data.data[0])
        if (success === 1) {
            const bar=document.getElementById('add-cart-id')
            bar.style.background=data.data[0].bgColor
            const producttitle = document.getElementById('svproname');
            const quantity = document.getElementById('quantity');
            const Price = document.getElementById('svprice');
            const cartbtn=document.getElementsByClassName('svcartbtn')
            {% comment %} const pricetext=document.getElementById('svprice') {% endcomment %}
            const metal = document.getElementById('metal-dropdown');
            const size = document.getElementById('size-input');
            producttitle.style.color = data.data[0].textColor;
            quantity.style.color = data.data[0].textColor;
            quantity.style.borderColor= data.data[0].textColor;
            metal.style.color = data.data[0].textColor;
            metal.style.borderColor= data.data[0].textColor;
            size.style.color = data.data[0].textColor;
            size.style.borderColor= data.data[0].textColor;
            {% comment %} Price.style.color = data.data[0].textColor; {% endcomment %}
            bar.style.color = data.data[0].textColor;
            pricetext.style.color = data.data[0].textColor;
           for (let i = 0; i < cartbtn.length; i++) {
                cartbtn[i].style.color = data.data[0].textColor;
            }
        } else {
          console.log("error in changing bgcolor and color")
        }
    } catch (error) {
        console.error('Error fetching in color:', error);
    } 
    try {
      const settingResponse = await fetch(`https://www.prodnotifyapi.skyvisionshopify.in/productnotifypurchasebar/getSetting/${shopid}`);
      if (settingResponse.ok) {
        const settingData = await settingResponse.json();
        console.log(settingData)
        let setting;
        if(settingData.success==1) { setting = settingData.data[0] }
        else {setting = 0}
        console.log( "setting data",setting)
        const proprice = document.getElementsByClassName('svproprice1')[0];
        const logo = document.getElementsByClassName('svimg')[0];
        const proname = document.getElementById('svproducttitle');
        const quantity = document.getElementsByClassName('svquantity')[0];
        const button = document.getElementsByClassName('svcartbtn')[0];
        const bar = document.getElementById('add-cart-id');
        const variant1 = document.getElementById('metal-dropdown');
        const variant2 = document.getElementById('size-input');

        proprice.style.display = setting.price == 1 ? 'block' : 'none';
        logo.style.display = setting.logo == 1 ? 'block' : 'none';
        proname.style.display = setting.product_name == 1 ? 'block' : 'none';
        quantity.style.display = setting.quantity == 1 ? 'block' : 'none';
        button.style.display = setting.cart_button == 1 ? 'block' : 'none';
        bar.style.display = setting.popup_bar == 1 ? 'block' : 'none';
        variant1.style.display = setting.variant1 == 1 ? 'block' : 'none';
        variant2.style.display = setting.variant2 == 1 ? 'block' : 'none';
      } else {
        throw new Error('Network response was not ok in setting');
      }
    } catch (error) {
      console.error('Error fetching in setting:', error);
    } 
    
  })
</script>